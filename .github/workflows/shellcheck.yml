---
name: shellcheck
on: [push, pull_request]
jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Install shellcheck
        shell: sh
        run: |
          case ${{ runner.os }}
          in
            (macOS) osvariant=darwin ;;
            (Linux) osvariant=linux ;;
            (Windows)
              echo 'Windows runners are not supported.' >&2
              exit 1
              ;;
            (*)
              echo 'unknown runner.os: ${{ runner.os }}' >&2
              exit 1
              ;;
          esac
          case ${{ runner.arch }}
          in
            (X86)
              echo 'x86 runners not supported.' >&2
              exit 1
              ;;
            (X64) arch=x86_64 ;;
            (ARM) arch=armv6hf ;;
            (ARM64) arch=aarch64 ;;
            (*)
              echo 'unknown runner.arch: ${{ runner.arch }}' >&2
              exit 1
              ;;
          esac

          scversion=stable  # stable, latest (nightly), or tag (v0.8.0)

          baseurl=https://github.com/koalaman/shellcheck/releases/download
          filename=shellcheck-${scversion}.${osvariant}.${arch}.tar.xz

          mkdir -p /usr/local/bin
          curl -s -L "${baseurl}/${scversion}/${filename}" \
          | tar -x -J -O "shellcheck-${scversion}/shellcheck" \
          >/usr/local/bin/shellcheck
          chmod +x /usr/local/bin/shellcheck
      - name: Display shellcheck version
        shell: sh
        run: |
          command -v shellcheck
          shellcheck --version
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run shellcheck
        shell: sh
        run: |
          set -e -u

          SHELLCHECKCMD='shellcheck -a'

          # Check explorers
          printf 'Checking explorers…\n'

          find ./explorer -type f \
            -exec awk 'FNR==1{exit !/^#!\/bin\/sh/}' {} \; \
            -exec ${SHELLCHECKCMD} {} + \
          || rc=1

          # Check types
          for type in ./type/*/.
          do
            type=${type%/.}

            printf '\nChecking type: %s…\n' "${type##*/}"

            set --
            for c in \
              "${type}/manifest" \
              "${type}/gencode-remote"
            do
              test -e "${c}" && set -- "$@" "${c}"
            done
            ${SHELLCHECKCMD} "$@" || rc=1

            if test -d "${type}/explorer"
            then
              find "${type}/explorer" \
                -type f -exec awk 'FNR==1{exit !/^#!\/bin\/sh/}' {} \; \
                -exec ${SHELLCHECKCMD} {} + \
              || rc=1
            fi

            if test -d "${type}/files"
            then
              find "${type}/files" \
                -type f \( -name '*.sh' -o -exec awk 'FNR==1{exit !/^#!\/bin\/sh/}' {} \; \) \
                -exec ${SHELLCHECKCMD} {} + \
              || rc=1
            fi
          done

          exit $((rc))
