#!/bin/sh -e
#
# 2011-2012 Nico Schottelius (nico-cdist at schottelius.org)
# 2021-2022 Dennis Camera (skonfig at dtnr.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#
#
# Retrieve the status of a package - parsed dpkg output
#

breify() {
	# Convert arguments to a POSIX BRE-compatible form, i.e. escape special
	# characters (incl. delimiter)
	printf '%s' "$*" | sed -e 's/[].^$*\[]/\\&/g' -e 's:/:\\/:g'
}

dpkg_show() {
	# Usage: dpkg_show FIELD PKG
	dpkg-query --show --showformat "\${$1}\\n" "$2" 2>/dev/null
}


if test -f "${__object:?}/parameter/name"
then
	name=$(cat "${__object:?}/parameter/name")
else
	name=${__object_id:?}
fi

state=$(cat "${__object:?}/parameter/state")

# if present state is requested and $name is e.g. editor, check if any editor is installed instead
if [ "$state" = 'present' ]
then
	rprovides=$(apt-cache showpkg "${name}" | sed -e '1,/^Reverse Provides:/d' -e 's/ .*$//')
fi

state_dir=$(apt-config dump | sed -n -e 's/^Dir::State  *"\(.*\)";$/\/\1/p')
extended_states_file=${state_dir%/}/extended_states

for pkg in ${name} ${rprovides}
do
	if test "$(dpkg_show Status "${pkg}")" = 'install ok installed'
	then
		version=$(dpkg_show Version "${pkg}")

		if test -f "${extended_states_file}"
		then
			# On Debian >= 5 check if the package is auto installed

			# NOTE: instead of using apt-mark(8) parse the extended_states file
			#       directly. apt-mark is sloow and didn't have a stable
			#       interface in older Debian versions.
			is_auto=$(sed -n \
				-e '/^Package: '"$(breify "${name}")"'$/,/^$/!d' \
				-e 's/^Auto-Installed: *//p' \
				"${extended_states_file}")
		fi

		# NOTE: older versions don't have apt-mark -> all packages are manual
		auto_word=$(test $((is_auto)) -ne 0 && echo auto || echo manual)

		state='present'
		if test -s "${__object:?}/parameter/target-release"
		then
			# check if the target release is correct

			read -r target_release <"${__object:?}/parameter/target-release"
			resolve_suite() {
				if (set -- /var/lib/apt/lists/*_InRelease && test -f "$1")
				then
					# only if any InRelease files exist.
					awk -v release="$1" -F ': ' '
					FNR == 1 { for (k in v) delete v[k] }
					$1 == "Suite" || $1 == "Codename" {
					  v[$1] = $2
					  if ($2 == release) exit (f=1)
					}
					END { if (f) print v["Suite"] }
					' /var/lib/apt/lists/*_InRelease
				fi
			}

			releases_is=$(
				awk -v pkg_name="${pkg}" '
				/^[^ ]/ { p = ($0 == pkg_name ":") }
				p && /^  [^ ]/ {
				  match($0, /^  [^:]+:/)
				  s = substr($0, RSTART+2, RLENGTH-3)
				}
				p && s == "Version table" && /^ *\*\*\* / {
				  while (getline > 0 && /^        [0-9]/ && NF > 2)  # filter repo lines
				    print substr($3, 1, index($3, "/") - 1)
				}
				' <<-EOF
				$(LC_ALL=C apt-cache policy "${pkg}")
				EOF
				)

			if test -n "${releases_is}" \
				&& ! printf '%s\n' "${releases_is}" \
					 | while read -r _ln
					   do
						   resolve_suite "${_ln}"
					   done \
					 | grep -qxF "$(resolve_suite "${target_release}")"
			then
				# state=wrong-release iff the currently installed version of the
				# package is available in at least one of the configured APT
				# repositories, but none of them match the release given in
				# --target-release (normalised by Suite name).
				state='wrong-release'
			fi
		fi

		echo "${state} ${auto_word} ${pkg} ${version}"
		exit 0
	fi
done

if dpkg_show Status "${name}" | grep -q ' config-files$'
then
	echo absent config-files
else
	echo absent purged
fi
