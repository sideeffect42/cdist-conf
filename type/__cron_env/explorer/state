#!/bin/sh -e
#
# 2022 Dennis Camera (skonfig at dtnr.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#
# Returns the current state of the cron variable.
#

user=$(cat "${__object:?}/parameter/user")

if test -f "${__object:?}/parameter/name"
then
	read -r var_name <"${__object:?}/parameter/name"
else
	var_name=${__object_id:?}
fi

crontab_list() {
	case $(uname -s)
	in
		(SunOS)
			crontab -l "${user}" 2>/dev/null ;;
		(*)
			crontab -u "${user}" -l 2>/dev/null ;;
	esac

}

grep_var() {
	awk -v var_name="$1" '
	function unquote(s,    qc) {
		if (s ~ /^["'\'']/) {
			qc = substr(s, 1, 1)
			match(v, "^"qc"[^"qc"]*"qc)
			return substr(v, RSTART+1, RLENGTH-2)
		} else {
			return s
		}
	}

	index($0, var_name) == 1 && match(substr($0, length(var_name)+1), /^ *= */) {
		print unquote(substr($0, length(var_name)+RSTART+RLENGTH))
	}'
}

value_is=$(crontab_list | grep_var "${var_name}")

if test -z "${value_is}"
then
	echo absent
elif
	# NOTE: only produce "different" state if --value is set
	value_should=$(cat "${__object:?}/parameter/value" 2>/dev/null) \
	&& test "${value_is}" != "${value_should}"
then
	echo different
else
	echo present
fi
